name: CI
on:
  pull_request:
  push:
    branches: ['**']
    tags: [v*]
jobs:
  ci:
    # run on 1) push, 2) external PRs, 3) softwaremill-ci PRs
    # do not run on internal, non-steward PRs since those will be run by push to branch
    if: |
      github.event_name == 'push' || 
      github.event.pull_request.head.repo.full_name != github.repository ||
      github.event.pull_request.user.login == 'softwaremill-ci'
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '21'
        cache: 'sbt'
    - name: Compile
      run: sbt -v compile
    - name: Compile documentation
      run: sbt -v compileDocumentation
    - name: Test
      run: sbt -v test
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure() # run regardless previous step succeeded or failed
      with:
        name: 'Tests results'
        path: '**/test-reports/TEST*.xml'
        reporter: java-junit

  publish:
    name: Publish release
    needs: [ci]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Compile
        run: sbt compile
      - name: Publish artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Extract version from commit message
        run: |
          version=${GITHUB_REF/refs\/tags\/v/}
          echo "VERSION=$version" >> $GITHUB_ENV
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
      - name: Publish release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: "v${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          version: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # `automerge` label is attached iff there is exactly one file changed by steward and this file belongs to a
  # whitelist specified by `labeler.yml`
  label:
    name: Attach automerge label
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      # count number of files changed
      - name: Count number of files changed
        id: count-changed-files
        run: |
          N=$(git diff --name-only -r HEAD^1 HEAD | wc -w)
          echo "changed_files_num=$N" >> $GITHUB_OUTPUT
      - name: Launch labeler
        # skip if more than one file changed
        if: steps.count-changed-files.outputs.changed_files_num == 1
        uses: srvaroa/labeler@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  auto-merge:
    name: Auto merge
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    needs: [ ci, label ]
    runs-on: ubuntu-22.04
    steps:
      - id: automerge
        name: automerge
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_METHOD: "squash"
